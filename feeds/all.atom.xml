<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Ashley's Blog</title><link href="https://trapdoor.cloud/" rel="alternate"></link><link href="https://trapdoor.cloud/feeds/all.atom.xml" rel="self"></link><id>https://trapdoor.cloud/</id><updated>2024-12-07T00:00:00+02:00</updated><subtitle>DevOps Engineer</subtitle><entry><title>Comparison between Takealot and Amazon South Africa</title><link href="https://trapdoor.cloud/comparison-between-takealot-and-amazon-south-africa/" rel="alternate"></link><published>2024-12-07T00:00:00+02:00</published><updated>2024-12-07T00:00:00+02:00</updated><author><name>Ashley Kleynhans</name></author><id>tag:trapdoor.cloud,2024-12-07:/comparison-between-takealot-and-amazon-south-africa/</id><summary type="html">&lt;p&gt;This post does a comparison between Takealot and
Amazon South Africa.&lt;/p&gt;</summary><content type="html">&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;
&lt;p&gt;I have been using Takealot for online shopping for as long
as I can remember, but Amazon recently launched in South Africa
to give Takealot some competition.  I have making been many online
purchases on both since Black Friday 2024, and have decided to
share a comparison between Takealot and Amazon South Africa
based on my personal experience of shopping from the two
of them.&lt;/p&gt;
&lt;h2 id="takealot"&gt;Takealot&lt;/h2&gt;
&lt;h3 id="pros"&gt;Pros&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Items hardly ever arrive damaged.&lt;/li&gt;
&lt;li&gt;User can immediately see the prices of items when browsing
   through the various deals pages without having to click
   through to the product page of each item.&lt;/li&gt;
&lt;li&gt;The website and mobile app are both user-friendly
   and easy to navigate, and have modern UI and UX.&lt;/li&gt;
&lt;li&gt;It is simple to reschedule a delivery.&lt;/li&gt;
&lt;li&gt;Small items are always placed into boxes to prevent them
   from being damaged by the couriers, only large items
   that already have their own sturdy packaging are not
   placed into boxes.&lt;/li&gt;
&lt;li&gt;The packaging tape on the boxes is very easy to remove.&lt;/li&gt;
&lt;li&gt;The product review process uses AI to moderate the reviews
   and the review only requires manual approval if the AI
   doesn't approve the review automatically, so if the
   review guidelines are adhered to, product reviews are
   approved very quickly.&lt;/li&gt;
&lt;li&gt;Delivery drivers give the user a phone call if they
   don't hear them hooting to ensure that the delivery is
   not missed.&lt;/li&gt;
&lt;li&gt;Delivery handover is smooth and efficient.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="cons"&gt;Cons&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Prices are often much higher than Amazon South Africa.&lt;/li&gt;
&lt;li&gt;Only a single collection point in my area which is inconvenient
    and out of my way.&lt;/li&gt;
&lt;li&gt;Returns can be scheduled before an item is even delivered.&lt;/li&gt;
&lt;li&gt;Collections for returns cannot be rescheduled by the user.&lt;/li&gt;
&lt;li&gt;Notifications for wish list items seem to be based on price
    changes, regardless of whether the price increases or decreases.&lt;/li&gt;
&lt;li&gt;An order cannot be cancelled once the user has paid for it,
    they have to wait for it to be delivered and then schedule
    a return.&lt;/li&gt;
&lt;li&gt;The user is able to review items before they are even
    delivered.&lt;/li&gt;
&lt;li&gt;No progress bar to show the percentage of deals claimed.&lt;/li&gt;
&lt;li&gt;Excessive use of boxes by either using oversized boxes or
    placing each order item into separate boxes instead of
    packaging everything together into a single box.&lt;/li&gt;
&lt;li&gt;No indication of last purchased date if the user views
    the product page for a product that they have previously
    purchased.&lt;/li&gt;
&lt;li&gt;When reviewing products, the user is unable to upload
    photos or videos as part of their review.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="amazon-south-africa"&gt;Amazon South Africa&lt;/h2&gt;
&lt;h3 id="pros_1"&gt;Pros&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Prices are often much lower than Takealot.&lt;/li&gt;
&lt;li&gt;Collection points use Pudo Lockers (powered by The Courier
   Guy), and there are many around me, which makes collections
   much more convenient.&lt;/li&gt;
&lt;li&gt;Order items can be cancelled before the order is packed.&lt;/li&gt;
&lt;li&gt;The deals page has a progress bar that shows the percentage
   of deals claimed.&lt;/li&gt;
&lt;li&gt;If the user clicks through to a product page for a product
   that they have previously purchased, the page product page
   will display the date that the product was previously
   purchased, which is useful for accidentally purchasing the
   same product more than once.&lt;/li&gt;
&lt;li&gt;When reviewing products, the user is able to upload a photo
   or video as part of their review.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="cons_1"&gt;Cons&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Around 50% of the items that I ordered arrived with
    broken or damaged boxes, or even boxes that had been opened
    which is especially unacceptable when purchasing gifts.&lt;/li&gt;
&lt;li&gt;Some items are packed into soft courier bags instead of
    boxes, which causes items to be damaged by the couriers.&lt;/li&gt;
&lt;li&gt;Prices are not visible when browsing through the deals
    pages.  The user has to click though to the product page
    for each item to view the price of that specific item.&lt;/li&gt;
&lt;li&gt;The navigation on both the website and mobile app are very
    buggy and they both jump and make the user lose track of
    where they were while trying to scroll through the 
    deals pages.&lt;/li&gt;
&lt;li&gt;The UI of the page to cancel order items is hideous,
    and only allows the user to cancel the entire quantity
    instead of allowing the user to specify the quantity that
    they want to cancel.&lt;/li&gt;
&lt;li&gt;The general UI and UX are very dated and not user-friendly
    at all.&lt;/li&gt;
&lt;li&gt;The user has to fight with the packaging tape to remove it
    from the boxes.&lt;/li&gt;
&lt;li&gt;The product review process seems to be manual, so it takes
    a long time for product reviews to be approved.&lt;/li&gt;
&lt;li&gt;Delivery drivers drive off if the user does not hear them
    hooting, and also do not give the user sufficient time to
    meet them before driving off.&lt;/li&gt;
&lt;li&gt;Delivery handover is slow and inefficient and requires
    a lot of patience most of the time.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Takealot is generally a far superior experience.&lt;/li&gt;
&lt;li&gt;Amazon South Africa has far more competitive pricing,
  especially during Black Friday.&lt;/li&gt;
&lt;/ul&gt;</content><category term="eCommerce"></category><category term="ecommerce"></category><category term="shopping"></category></entry><entry><title>Injecting Missing Content-Type Header into Python Flask Webhooks</title><link href="https://trapdoor.cloud/injecting-missing-content-type-header-into-python-flask-webhooks/" rel="alternate"></link><published>2024-12-04T00:00:00+02:00</published><updated>2024-12-04T00:00:00+02:00</updated><author><name>Ashley Kleynhans</name></author><id>tag:trapdoor.cloud,2024-12-04:/injecting-missing-content-type-header-into-python-flask-webhooks/</id><summary type="html">&lt;p&gt;This post helps you to automatically inject missing
&lt;code&gt;Content-Type&lt;/code&gt; headers into your Python Flask Webhooks.&lt;/p&gt;</summary><content type="html">&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt;
&lt;p&gt;We recently had an issue where one of our 3rd party providers decided
that it would be a good idea to remove the &lt;code&gt;Content-Type&lt;/code&gt; header
from the webhooks that they send to our application, breaking the
contract of the webhook format.&lt;/p&gt;
&lt;p&gt;Our application relies heavily on the webhooks for receiving status
updates and the output from the 3rd party application, and our
customers were negatively impacted by this unannounced change.&lt;/p&gt;
&lt;h2 id="automatically-injecting-the-missing-content-type-headers"&gt;Automatically injecting the missing Content-Type headers&lt;/h2&gt;
&lt;p&gt;Fortunately, it is possible to implement a simple work-around
for this issue in a Python Flask application as follows:&lt;/p&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #d2a8ff; font-weight: bold"&gt;@app&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;before_request&lt;/span&gt;
&lt;span style="color: #ff7b72"&gt;def&lt;/span&gt; &lt;span style="color: #d2a8ff; font-weight: bold"&gt;before_request&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;():&lt;/span&gt;
    &lt;span style="color: #8b949e; font-style: italic"&gt;# Only handle POST requests to /webhook endpoints&lt;/span&gt;
    &lt;span style="color: #ff7b72"&gt;if&lt;/span&gt; &lt;span style="color: #e6edf3"&gt;request&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;method&lt;/span&gt; &lt;span style="color: #ff7b72; font-weight: bold"&gt;==&lt;/span&gt; &lt;span style="color: #a5d6ff"&gt;&amp;#39;POST&amp;#39;&lt;/span&gt; &lt;span style="color: #ff7b72; font-weight: bold"&gt;and&lt;/span&gt; &lt;span style="color: #a5d6ff"&gt;&amp;#39;/webhook/&amp;#39;&lt;/span&gt; &lt;span style="color: #ff7b72; font-weight: bold"&gt;in&lt;/span&gt; &lt;span style="color: #e6edf3"&gt;request&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;path:&lt;/span&gt;
        &lt;span style="color: #e6edf3"&gt;content_type&lt;/span&gt; &lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt; &lt;span style="color: #e6edf3"&gt;request&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;headers&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;get(&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;,&lt;/span&gt; &lt;span style="color: #a5d6ff"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;)&lt;/span&gt;

        &lt;span style="color: #8b949e; font-style: italic"&gt;# If Content-Type is not set or is not application/json&lt;/span&gt;
        &lt;span style="color: #ff7b72"&gt;if&lt;/span&gt; &lt;span style="color: #a5d6ff"&gt;&amp;#39;application/json&amp;#39;&lt;/span&gt; &lt;span style="color: #ff7b72; font-weight: bold"&gt;not&lt;/span&gt; &lt;span style="color: #ff7b72; font-weight: bold"&gt;in&lt;/span&gt; &lt;span style="color: #e6edf3"&gt;content_type&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;lower():&lt;/span&gt;
            &lt;span style="color: #8b949e; font-style: italic"&gt;# Try to parse the data as JSON&lt;/span&gt;
            &lt;span style="color: #ff7b72"&gt;try&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;:&lt;/span&gt;
                &lt;span style="color: #8b949e; font-style: italic"&gt;# Force Flask to parse JSON data even if Content-Type is not set&lt;/span&gt;
                &lt;span style="color: #ff7b72"&gt;if&lt;/span&gt; &lt;span style="color: #e6edf3"&gt;request&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;data:&lt;/span&gt;
                    &lt;span style="color: #e6edf3"&gt;request&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;get_json(force&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt;&lt;span style="color: #79c0ff"&gt;True&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;)&lt;/span&gt;
                &lt;span style="color: #8b949e; font-style: italic"&gt;# Modify the request headers to include Content-Type&lt;/span&gt;
                &lt;span style="color: #e6edf3"&gt;request&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;environ[&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;&amp;#39;CONTENT_TYPE&amp;#39;&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;]&lt;/span&gt; &lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt; &lt;span style="color: #a5d6ff"&gt;&amp;#39;application/json&amp;#39;&lt;/span&gt;
            &lt;span style="color: #ff7b72"&gt;except&lt;/span&gt; &lt;span style="color: #f0883e; font-weight: bold"&gt;Exception&lt;/span&gt; &lt;span style="color: #ff7b72"&gt;as&lt;/span&gt; &lt;span style="color: #e6edf3"&gt;e:&lt;/span&gt;
                &lt;span style="color: #8b949e; font-style: italic"&gt;# If JSON parsing fails, return 400 Bad Request&lt;/span&gt;
                &lt;span style="color: #ff7b72"&gt;return&lt;/span&gt; &lt;span style="color: #e6edf3"&gt;make_response(jsonify({&lt;/span&gt;
                    &lt;span style="color: #a5d6ff"&gt;&amp;#39;stage&amp;#39;&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;:&lt;/span&gt; &lt;span style="color: #a5d6ff"&gt;&amp;#39;self&amp;#39;&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;,&lt;/span&gt;
                    &lt;span style="color: #a5d6ff"&gt;&amp;#39;status&amp;#39;&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;:&lt;/span&gt; &lt;span style="color: #a5d6ff"&gt;&amp;#39;error&amp;#39;&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;,&lt;/span&gt;
                    &lt;span style="color: #a5d6ff"&gt;&amp;#39;msg&amp;#39;&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;:&lt;/span&gt; &lt;span style="color: #a5d6ff"&gt;&amp;#39;Invalid JSON data&amp;#39;&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;,&lt;/span&gt;
                    &lt;span style="color: #a5d6ff"&gt;&amp;#39;detail&amp;#39;&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;:&lt;/span&gt; &lt;span style="color: #e6edf3"&gt;str(e)&lt;/span&gt;
                &lt;span style="color: #e6edf3"&gt;}),&lt;/span&gt; &lt;span style="color: #a5d6ff"&gt;400&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="DevOps"></category><category term="python"></category><category term="flask"></category><category term="webhooks"></category></entry><entry><title>Getting Started with RunPod Serverless</title><link href="https://trapdoor.cloud/getting-started-with-runpod-serverless/" rel="alternate"></link><published>2023-07-16T00:00:00+02:00</published><updated>2024-11-28T00:00:00+02:00</updated><author><name>Ashley Kleynhans</name></author><id>tag:trapdoor.cloud,2023-07-16:/getting-started-with-runpod-serverless/</id><summary type="html">&lt;p&gt;This post helps you to get started with &lt;a href="https://runpod.io?ref=2xxro4sy"&gt;RunPod&lt;/a&gt;
Serverless for hosting and scaling your AI applications in the cloud.&lt;/p&gt;</summary><content type="html">&lt;h2 id="what-is-runpod"&gt;What is RunPod?&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://runpod.io?ref=2xxro4sy"&gt;RunPod&lt;/a&gt; is a Cloud Hosting Provider that allows
you to rent Docker containers that are attached to various different sizes of
GPU instances so that you can benefit from their Cloud GPU for running
your AI tasks if you don't have a powerful enough
GPU to run them yourself.&lt;/p&gt;
&lt;p&gt;They offer various different types of services, including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Dedicated and On-Demand GPU Instances.&lt;/li&gt;
&lt;li&gt;Serverless GPU Hosting.&lt;/li&gt;
&lt;li&gt;AI API Endpoints.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This post focuses on their Serverless GPU hosting which can be used
to scale your application to hundreds of users.&lt;/p&gt;
&lt;h2 id="serverless-key-concepts"&gt;Serverless Key Concepts&lt;/h2&gt;
&lt;p&gt;There are three main concepts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Serverless Handler&lt;/li&gt;
&lt;li&gt;Templates&lt;/li&gt;
&lt;li&gt;Endpoints&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="serverless-handler"&gt;Serverless Handler&lt;/h3&gt;
&lt;p&gt;This is a critical component for your application to function correctly
within RunPod Serverless.  You need to import the &lt;code&gt;runpod&lt;/code&gt; Python
module, and also ensure that you are using Python version 3.10.x because
the latest RunPod module is not compatible with Python versions prior
to version 3.10.x.&lt;/p&gt;
&lt;p&gt;The Serverless handler is usually implemented in a file called
&lt;code&gt;rp_handler.py&lt;/code&gt; (RunPod Handler) and looks something like the example
code below that will take a &lt;code&gt;name&lt;/code&gt; as input and then send a greeting
back.&lt;/p&gt;
&lt;p&gt;The Serverless handler accepts a JSON payload that contains an &lt;code&gt;input&lt;/code&gt;,
and returns a response that contains an &lt;code&gt;output&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Example Serverless Handler (&lt;code&gt;rp_handler.py&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #ff7b72"&gt;import&lt;/span&gt; &lt;span style="color: #ff7b72"&gt;runpod&lt;/span&gt;


&lt;span style="color: #ff7b72"&gt;def&lt;/span&gt; &lt;span style="color: #d2a8ff; font-weight: bold"&gt;process_input&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;(input):&lt;/span&gt;
&lt;span style="color: #6e7681"&gt;    &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span style="color: #a5d6ff"&gt;    Execute the application code&lt;/span&gt;
&lt;span style="color: #a5d6ff"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span style="color: #e6edf3"&gt;name&lt;/span&gt; &lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt; &lt;span style="color: #e6edf3"&gt;input[&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;]&lt;/span&gt;
    &lt;span style="color: #e6edf3"&gt;greeting&lt;/span&gt; &lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt; &lt;span style="color: #79c0ff"&gt;f&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;&amp;#39;Hello {&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;name&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;}&amp;#39;&lt;/span&gt;

    &lt;span style="color: #ff7b72"&gt;return&lt;/span&gt; &lt;span style="color: #e6edf3"&gt;{&lt;/span&gt;
        &lt;span style="color: #a5d6ff"&gt;&amp;quot;greeting&amp;quot;&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;:&lt;/span&gt; &lt;span style="color: #e6edf3"&gt;greeting&lt;/span&gt;
    &lt;span style="color: #e6edf3"&gt;}&lt;/span&gt;


&lt;span style="color: #8b949e; font-style: italic"&gt;# ---------------------------------------------------------------------------- #&lt;/span&gt;
&lt;span style="color: #8b949e; font-style: italic"&gt;#                                RunPod Handler                                #&lt;/span&gt;
&lt;span style="color: #8b949e; font-style: italic"&gt;# ---------------------------------------------------------------------------- #&lt;/span&gt;
&lt;span style="color: #ff7b72"&gt;def&lt;/span&gt; &lt;span style="color: #d2a8ff; font-weight: bold"&gt;handler&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;(event):&lt;/span&gt;
&lt;span style="color: #6e7681"&gt;    &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span style="color: #a5d6ff"&gt;    This is the handler function that will be called by RunPod serverless.&lt;/span&gt;
&lt;span style="color: #a5d6ff"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span style="color: #ff7b72"&gt;return&lt;/span&gt; &lt;span style="color: #e6edf3"&gt;process_input(event[&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;&amp;#39;input&amp;#39;&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;])&lt;/span&gt;


&lt;span style="color: #ff7b72"&gt;if&lt;/span&gt; &lt;span style="color: #79c0ff"&gt;__name__&lt;/span&gt; &lt;span style="color: #ff7b72; font-weight: bold"&gt;==&lt;/span&gt; &lt;span style="color: #a5d6ff"&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;:&lt;/span&gt;
    &lt;span style="color: #e6edf3"&gt;runpod&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;serverless&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;start({&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;&amp;#39;handler&amp;#39;&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;:&lt;/span&gt; &lt;span style="color: #e6edf3"&gt;handler})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id="local-testing"&gt;Local Testing&lt;/h4&gt;
&lt;p&gt;It is useful to test your Serverless Handler code locally before deploying
it to RunPod.  You can do this by creating a file called &lt;code&gt;test_input.json&lt;/code&gt;
with a body that looks like this:&lt;/p&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #e6edf3"&gt;{&lt;/span&gt;
&lt;span style="color: #6e7681"&gt;    &lt;/span&gt;&lt;span style="color: #7ee787"&gt;&amp;quot;input&amp;quot;&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;:&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #e6edf3"&gt;{&lt;/span&gt;
&lt;span style="color: #6e7681"&gt;        &lt;/span&gt;&lt;span style="color: #7ee787"&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;:&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;&amp;quot;Ashley&amp;quot;&lt;/span&gt;
&lt;span style="color: #6e7681"&gt;    &lt;/span&gt;&lt;span style="color: #e6edf3"&gt;}&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can then create a Python virtual environment and install the
&lt;code&gt;runpod&lt;/code&gt; module as follows:&lt;/p&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python3&lt;span style="color: #6e7681"&gt; &lt;/span&gt;-m&lt;span style="color: #6e7681"&gt; &lt;/span&gt;venv&lt;span style="color: #6e7681"&gt; &lt;/span&gt;venv
&lt;span style="color: #e6edf3"&gt;source&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;venv/bin/activate
pip3&lt;span style="color: #6e7681"&gt; &lt;/span&gt;install&lt;span style="color: #6e7681"&gt; &lt;/span&gt;runpod
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Once the &lt;code&gt;runpod&lt;/code&gt; module is installed, you can test your handler
locally as follows:&lt;/p&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python3&lt;span style="color: #6e7681"&gt; &lt;/span&gt;-u&lt;span style="color: #6e7681"&gt; &lt;/span&gt;rp_handler.py
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will return an output that looks similar to the following:&lt;/p&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;WARN   | RUNPOD_WEBHOOK_GET_JOB not set, switching to get_local
INFO   | local_test | Started
WARN   | Local test job results for local_test: {&amp;quot;output&amp;quot;: {&amp;quot;greeting&amp;quot;: &amp;quot;Hello Ashley&amp;quot;}}
INFO   | local_test | Finished
INFO   | Local testing complete, exiting.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Once you are happy with the results of your local testing,
you are ready to deploy your application to RunPod Serverless.
This will require you to build a Docker image containing your
application code using a Dockerfile.&lt;/p&gt;
&lt;h4 id="building-a-docker-image-for-your-application"&gt;Building a Docker image for your application&lt;/h4&gt;
&lt;p&gt;First, you will need to create a &lt;code&gt;Dockerfile&lt;/code&gt; that looks 
similar to the following (Refer to the Resources link at
the bottom of this post for more advanced usage):&lt;/p&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #ff7b72"&gt;FROM&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;python:3.10-slim&lt;/span&gt;

&lt;span style="color: #ff7b72"&gt;WORKDIR&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;/&lt;/span&gt;
&lt;span style="color: #ff7b72"&gt;RUN&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;pip&lt;span style="color: #6e7681"&gt; &lt;/span&gt;install&lt;span style="color: #6e7681"&gt; &lt;/span&gt;--no-cache-dir&lt;span style="color: #6e7681"&gt; &lt;/span&gt;runpod
&lt;span style="color: #ff7b72"&gt;COPY&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;rp_handler.py&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/

&lt;span style="color: #8b949e; font-style: italic"&gt;# Start the container&lt;/span&gt;
&lt;span style="color: #ff7b72"&gt;CMD&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #e6edf3"&gt;[&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;&amp;quot;python3&amp;quot;&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;,&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;&amp;quot;-u&amp;quot;&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;,&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;&amp;quot;rp_handler.py&amp;quot;&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then you will need to log into your Docker Hub account:&lt;/p&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span style="color: #6e7681"&gt; &lt;/span&gt;login
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;When building your Docker image, it is best practice to
use a version rather than &lt;code&gt;latest&lt;/code&gt; as a tag, since the images
are cached by the RunPod Serverless workers, and they will not know
that you have made a change to your image if you keep using the
same tag.&lt;/p&gt;
&lt;p&gt;RunPod containers run on &lt;code&gt;amd64&lt;/code&gt; architecture, so if you are using
an M1/M2 Mac to build the Docker image, you will need to use &lt;code&gt;buildx&lt;/code&gt;
and specify the &lt;code&gt;platform&lt;/code&gt;, for example:&lt;/p&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span style="color: #6e7681"&gt; &lt;/span&gt;buildx&lt;span style="color: #6e7681"&gt; &lt;/span&gt;build&lt;span style="color: #6e7681"&gt; &lt;/span&gt;--push&lt;span style="color: #6e7681"&gt; &lt;/span&gt;-t&lt;span style="color: #6e7681"&gt; &lt;/span&gt;username/imagename:tag&lt;span style="color: #6e7681"&gt; &lt;/span&gt;.&lt;span style="color: #6e7681"&gt; &lt;/span&gt;--platform&lt;span style="color: #6e7681"&gt; &lt;/span&gt;linux/amd64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you are building the image on an &lt;code&gt;amd64&lt;/code&gt; compatible
machine, you can build and push the image as follows:&lt;/p&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;docker&lt;span style="color: #6e7681"&gt; &lt;/span&gt;build&lt;span style="color: #6e7681"&gt; &lt;/span&gt;-t&lt;span style="color: #6e7681"&gt; &lt;/span&gt;username/imagename:tag&lt;span style="color: #6e7681"&gt; &lt;/span&gt;.
docker&lt;span style="color: #6e7681"&gt; &lt;/span&gt;push&lt;span style="color: #6e7681"&gt; &lt;/span&gt;username/imagename:tag
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Once your image is pushed to Docker Hub, you are ready to create
a Serverless Template for your image.&lt;/p&gt;
&lt;h3 id="templates"&gt;Templates&lt;/h3&gt;
&lt;p&gt;Navigate to your &lt;a href="https://www.runpod.io/console/serverless/user/templates"&gt;RunPod Serverless Templates&lt;/a&gt; and click
the &lt;code&gt;New Template&lt;/code&gt; button.&lt;/p&gt;
&lt;p&gt;A template is  a specification for the &lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt;
containers that will run your Serverless application.&lt;/p&gt;
&lt;p&gt;The template specifies the Docker image that will be used, the container
disk size, a Docker command (usually not required), and any environment variables.&lt;/p&gt;
&lt;p&gt;Usually &lt;a href="https://hub.docker.com/"&gt;Docker Hub&lt;/a&gt; is used to store Docker images,
but you can also use other Docker container registries.  If you choose to
use a private Docker registry rather than the public Docker Hub registry,
you will also need to provide &lt;code&gt;Container Registry Credentials&lt;/code&gt;.  The
credentials are not required if you use a Public registry.&lt;/p&gt;
&lt;p&gt;&lt;img alt="RunPod Template Example" src="https://trapdoor.cloud/images/runpod-template.png"&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Enter a name for your template.&lt;/li&gt;
&lt;li&gt;Enter the Docker image name for the Docker image that you want to use
   for your Serverless Endpoint.&lt;/li&gt;
&lt;li&gt;Leave &lt;code&gt;Container Registry Credentials&lt;/code&gt; empty, unless you specifically
   require credentials for the Docker container registry that you are using.&lt;/li&gt;
&lt;li&gt;Leave &lt;code&gt;Docker Command&lt;/code&gt; empty, unless you specifically need to provide
   a Docker command for whatever reason, but this should not usually be
   required.&lt;/li&gt;
&lt;li&gt;Set your Container Disk size.  5GB is usually sufficient and I have
   not yet found a specific use-case where it needs to be increased.&lt;/li&gt;
&lt;li&gt;If your application requires environment variables to be set,
   click the dropdown arrow next to &lt;code&gt;Environment Variables&lt;/code&gt; and enter
   your environment variables as Key =&amp;gt; Value pairs.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Once your Serverless Template is created, you are ready to create a
Serverless Endpoint.&lt;/p&gt;
&lt;h4 id="important-note"&gt;Important Note&lt;/h4&gt;
&lt;p&gt;The key difference between a GPU cloud Docker image and a Serverless
Docker image is that a Serverless image has a Serverless handler.
A GPU Cloud template will not work in Serverless without the
Serverless handler, so it is not recommended to use Docker images
designed for GPU Cloud within Serverless.&lt;/p&gt;
&lt;h3 id="endpoints"&gt;Endpoints&lt;/h3&gt;
&lt;p&gt;Navigate to your &lt;a href="https://www.runpod.io/console/serverless/user/endpoints"&gt;RunPod Serverless Endpoints&lt;/a&gt; and click
the &lt;code&gt;New Endpoint&lt;/code&gt; button.&lt;/p&gt;
&lt;p&gt;An endpoint is your actual Serverless Endpoint that will provide a
&lt;a href="https://en.wikipedia.org/wiki/Representational_state_transfer"&gt;REST&lt;/a&gt;
API endpoint for serving your application.&lt;/p&gt;
&lt;p&gt;&lt;img alt="RunPod Endpoint Example" src="https://trapdoor.cloud/images/runpod-endpoint-basic.png"&gt;&lt;/p&gt;
&lt;p&gt;When adding a new Endpoint, you will need to configure a few things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Endpoint Name&lt;/li&gt;
&lt;li&gt;Template&lt;/li&gt;
&lt;li&gt;Max Workers&lt;/li&gt;
&lt;li&gt;GPU Types&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can also optionally configure:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Min Provisioned Workers&lt;/li&gt;
&lt;li&gt;Ide Timeout&lt;/li&gt;
&lt;li&gt;FlashBoot&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And additional Advanced options:&lt;/p&gt;
&lt;p&gt;&lt;img alt="RunPod Advanced Endpoint Example" src="https://trapdoor.cloud/images/runpod-endpoint-advanced.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Deployment Region&lt;/li&gt;
&lt;li&gt;Scale Type&lt;/li&gt;
&lt;li&gt;Network Volume&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id="endpoint-name"&gt;Endpoint Name&lt;/h4&gt;
&lt;p&gt;The endpoint name is a unique name for you to easily identify your
endpoint, especially when you have multiple different endpoints.&lt;/p&gt;
&lt;h4 id="template"&gt;Template&lt;/h4&gt;
&lt;p&gt;The Template is described above, and specifies the Docker image
containing your application that should be pulled from the container
registry (such as Docker Hub).&lt;/p&gt;
&lt;h4 id="gpu-tiers"&gt;GPU Tiers&lt;/h4&gt;
&lt;p&gt;GPU tiers are the servers that will be used for the workers
for your endpoint.  The GPU tier you choose is dependent on the
type of application you are running.  For example, an LLM typically
needs a lot more VRAM than running inference using Stable Diffusion.
You can assign priorities to the various different GPU tiers.  Once
your priorities are assigned, you are able to limit your workers
to using specific GPU types within that GPU tier, for example, if
you select the 24GB GPU tier, you will be able to limit your workers
to only using the 3090 GPU type and exclude the A5000 and L4 GPU types.&lt;/p&gt;
&lt;h4 id="active-workers"&gt;Active Workers&lt;/h4&gt;
&lt;p&gt;Active workers will allow your Serverless endpoint to respond
much faster, and reduce cold start time, but I don't recommend setting
any Active workers due to the high cost of keeping them
running constantly.&lt;/p&gt;
&lt;h4 id="max-workers"&gt;Max Workers&lt;/h4&gt;
&lt;p&gt;The Max Workers are the maximum number of servers that run your
application so that your application can be scaled up automatically
across multiple servers to meet demand.  The default of 3 is usually
sufficient for development and testing purposes.  If you set this to
a value of 2 to 5, RunPod will provide you with additional workers
(up to a maximum of 5) to help prevent your workers from being
throttled.  I don't recommend setting this to a value of 1, because
there is a very high chance that your worker will become throttled,
and your requests will sit in the queue for a long time before being
processed.&lt;/p&gt;
&lt;h4 id="gpusworker"&gt;GPUs/Worker&lt;/h4&gt;
&lt;p&gt;If you select the 48GB GPU tier, you will be able to assign more
than one GPU per worker.  This is only available to the 48GB tier
and not any of the other GPU tiers.&lt;/p&gt;
&lt;h4 id="idle-timeout"&gt;Idle Timeout&lt;/h4&gt;
&lt;p&gt;Idle Timeout is the amount of time in seconds that your idle
workers will remain running and waiting to accept new requests.
You are charged for the timeout, so the default should be fine
for most cases.&lt;/p&gt;
&lt;h4 id="flashboot"&gt;FlashBoot&lt;/h4&gt;
&lt;p&gt;FlashBoot is disabled by default, but you can enable it to reduce
the majority of cold-starts down to 2 seconds, even for LLMs.&lt;/p&gt;
&lt;h4 id="data-centers-advanced-setting"&gt;Data Centers (Advanced Setting)&lt;/h4&gt;
&lt;p&gt;By default, your application will by deployed in all data centers.
If you have strict compliance requirements such as GDPR for example,
you will want to restrict the data centers to Europe only.&lt;/p&gt;
&lt;p&gt;If you are using a Network Volume, the Data Center will
be automatically adjusted to the data center where your Network
Volume resides.&lt;/p&gt;
&lt;h4 id="scale-type-advanced-setting"&gt;Scale Type (Advanced Setting)&lt;/h4&gt;
&lt;p&gt;There are 2 different scaling Strategies:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Queue Delay&lt;/li&gt;
&lt;li&gt;Request Count&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Queue Delay scaling strategy adjusts the number of workers
based on request wait times. With zero workers initially, the
first request adds one worker.  Subsequent requests add workers
only after waiting in the queue for the number of seconds that
you specify for &lt;code&gt;Queue Delay&lt;/code&gt;.  The default is 4 seconds.&lt;/p&gt;
&lt;p&gt;The Request Count scaling strategy adjusts the number of workers
according to the total number if requests in the queue and in
progress.  It automatically adds workers as the number of
requests increases, ensuring that tasks are handled efficiently.
The default is 4 requests.&lt;/p&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Total Workers Formula: Math.ceil((requestsInQueue + requestsInProgress) / 4)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id="network-volume-advanced-setting"&gt;Network Volume (Advanced Setting)&lt;/h4&gt;
&lt;p&gt;A Network Volume is basically Network Storage (similar to NFS).
You can use a Network Volume for all your workers to be able to
access the same files, for example if you have multiple different
models that you want to use with your endpoint.  You don't need
a Network Volume to use RunPod Serverless, you can still deploy
an application without using a Network Volume, but they are
useful for certain use cases.&lt;/p&gt;
&lt;p&gt;Network Volumes need to be added within the GPU Cloud section of
the RunPod console, and are only currently available in these data
centers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CA-MTL-1 (Canada)&lt;/li&gt;
&lt;li&gt;CA-MTL-3 (Canada)&lt;/li&gt;
&lt;li&gt;EU-CZ-1 (Europe)&lt;/li&gt;
&lt;li&gt;EU-RO-1 (Europe)&lt;/li&gt;
&lt;li&gt;EU-SE-1 (Europe)&lt;/li&gt;
&lt;li&gt;EUR-IS-1 (Europe)&lt;/li&gt;
&lt;li&gt;US-GA-2 (United States)&lt;/li&gt;
&lt;li&gt;US-KS-1 (United States)&lt;/li&gt;
&lt;li&gt;US-KS-2 (United States)&lt;/li&gt;
&lt;li&gt;US-OR-1 (United States)&lt;/li&gt;
&lt;li&gt;US-TX-1 (United States)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Unfortunately this also means that the GPU availability for
your Serverless application will be pretty low due to the limited
amount of data centers in which the Network Volumes are available
and could lead to your requests waiting in the queue for extended
periods of time if you use a region with low GPU availability for
the particular GPU type you require.   At the time of writing, the
highest GPU availability is for &lt;code&gt;RTX 4090&lt;/code&gt; in &lt;code&gt;EU-RO-1&lt;/code&gt;.  If
you place your Network Volume in any other data center, you could
experience high delays in your requests being picked up from the
queue.&lt;/p&gt;
&lt;h2 id="resources"&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/@generativelabs/videos"&gt;YouTube Tutorials by Generative Labs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://blog.runpod.io/serverless-create-a-basic-api/"&gt;RunPod's Blog Post on Creating a Custom Basic API Endpoint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/runpod-workers"&gt;Source Code to RunPod's Own Endpoints&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ashleykleynhans/runpod-worker-inswapper"&gt;Source Code to My Face Swap Endpoint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ashleykleynhans/runpod-worker-real-esrgan"&gt;Source Code to My Upscaling Endpoint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ashleykleynhans/runpod-worker-llava"&gt;Source Code to My LLaVA Endpoint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ashleykleynhans/runpod-worker-a1111"&gt;Source Code to My A1111 Stable Diffusion Endpoint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/ashleykleynhans/runpod-worker-oobabooga"&gt;Source Code to My Oobabooga Text Generation Endpoint&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="DevOps"></category><category term="devops"></category><category term="runpod"></category><category term="serverless"></category><category term="ai"></category><category term="gpu"></category><category term="cloud"></category><category term="docker"></category></entry><entry><title>Installing CheckMK Agent on macOS</title><link href="https://trapdoor.cloud/installing-checkmk-agent-on-macos/" rel="alternate"></link><published>2023-02-03T00:00:00+02:00</published><updated>2023-02-03T00:00:00+02:00</updated><author><name>Ashley Kleynhans</name></author><id>tag:trapdoor.cloud,2023-02-03:/installing-checkmk-agent-on-macos/</id><summary type="html">&lt;p&gt;This post walks you through the process of installing CheckMK
agent on macOS servers so that they can be monitored by your
CheckMK server.&lt;/p&gt;</summary><content type="html">&lt;h2 id="installation-procedure"&gt;Installation Procedure&lt;/h2&gt;
&lt;p&gt;You can install CheckMK agent on your macOS servers as follows:&lt;/p&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #8b949e; font-style: italic"&gt;# Clone Repo&lt;/span&gt;
git&lt;span style="color: #6e7681"&gt; &lt;/span&gt;clone&lt;span style="color: #6e7681"&gt; &lt;/span&gt;https://github.com/ThomasKaiser/Check_MK.git
&lt;span style="color: #e6edf3"&gt;cd&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;Check_MK

&lt;span style="color: #8b949e; font-style: italic"&gt;# Remove less common plugins&lt;/span&gt;
rm&lt;span style="color: #6e7681"&gt; &lt;/span&gt;-f&lt;span style="color: #6e7681"&gt; &lt;/span&gt;agents/plugins/monitor-jss-and-macos-updates&lt;span style="color: #6e7681"&gt; &lt;/span&gt;agents/plugins/city-temperatures&lt;span style="color: #6e7681"&gt; &lt;/span&gt;agents/plugins/monitor-kerio&lt;span style="color: #6e7681"&gt; &lt;/span&gt;agents/plugins/smart*

&lt;span style="color: #8b949e; font-style: italic"&gt;# Install dependencies&lt;/span&gt;
brew&lt;span style="color: #6e7681"&gt; &lt;/span&gt;install&lt;span style="color: #6e7681"&gt; &lt;/span&gt;smartmontools&lt;span style="color: #6e7681"&gt; &lt;/span&gt;osx-cpu-temp

&lt;span style="color: #8b949e; font-style: italic"&gt;# Modify the plist file (remove cwd)&lt;/span&gt;
sed&lt;span style="color: #6e7681"&gt; &lt;/span&gt;-i&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;&amp;#39;/&amp;lt;key&amp;gt;WorkingDirectory/{N;d;}&amp;#39;&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;LaunchDaemon/de.mathias-kettner.check_mk.plist

&lt;span style="color: #8b949e; font-style: italic"&gt;# Create directories needed and copy files to required location&lt;/span&gt;
sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;mkdir&lt;span style="color: #6e7681"&gt; &lt;/span&gt;-p&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/usr/local/lib/check_mk_agent
sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;mkdir&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/usr/local/lib/check_mk_agent/local
sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;cp&lt;span style="color: #6e7681"&gt; &lt;/span&gt;agents/check_mk_agent.macosx&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/usr/local/lib/check_mk_agent/
sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;cp&lt;span style="color: #6e7681"&gt; &lt;/span&gt;-r&lt;span style="color: #6e7681"&gt; &lt;/span&gt;agents/plugins/&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/usr/local/lib/check_mk_agent/
sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;cp&lt;span style="color: #6e7681"&gt; &lt;/span&gt;LaunchDaemon/de.mathias-kettner.check_mk.plist&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/Library/LaunchDaemons/
sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;mkdir&lt;span style="color: #6e7681"&gt; &lt;/span&gt;-p&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/usr/local/bin
sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;ln&lt;span style="color: #6e7681"&gt; &lt;/span&gt;-s&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/usr/local/lib/check_mk_agent/check_mk_agent.macosx&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/usr/local/bin/check_mk_agent
sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;mkdir&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/etc/check_mk

sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;touch&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/var/run/de.arts-others.softwareupdatecheck
sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;touch&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/var/log/check_mk.err

&lt;span style="color: #8b949e; font-style: italic"&gt;# Permissions&lt;/span&gt;
sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;chmod&lt;span style="color: #6e7681"&gt; &lt;/span&gt;+x&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/usr/local/lib/check_mk_agent/check_mk_agent.macosx
sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;chmod&lt;span style="color: #6e7681"&gt; &lt;/span&gt;o+rw&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/var/run/de.arts-others.softwareupdatecheck
sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;chmod&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;666&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/var/log/check_mk.err
sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;chown&lt;span style="color: #6e7681"&gt; &lt;/span&gt;-R&lt;span style="color: #6e7681"&gt; &lt;/span&gt;root:admin&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/usr/local/lib/check_mk_agent
sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;chmod&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;644&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/Library/LaunchDaemons/de.mathias-kettner.check_mk.plist

&lt;span style="color: #8b949e; font-style: italic"&gt;# Install LaunchDaemon&lt;/span&gt;
sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;launchctl&lt;span style="color: #6e7681"&gt; &lt;/span&gt;load&lt;span style="color: #6e7681"&gt; &lt;/span&gt;-w&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/Library/LaunchDaemons/de.mathias-kettner.check_mk.plist

&lt;span style="color: #8b949e; font-style: italic"&gt;# Once lnx_if fix is merged into the agent, the below is required (see: https://github.com/ThomasKaiser/Check_MK/pull/2)&lt;/span&gt;
brew&lt;span style="color: #6e7681"&gt; &lt;/span&gt;install&lt;span style="color: #6e7681"&gt; &lt;/span&gt;iproute2mac
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="reference"&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://gist.github.com/catchdave/44c45e31951fcc9ee4fb8768f4d95f21"&gt;Install check_mk agent on OSX&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="DevOps"></category><category term="devops"></category><category term="checkmk"></category><category term="monitoring"></category><category term="macos"></category></entry><entry><title>Compiling and Installing dnsmasq from Source on Ubuntu 22.04</title><link href="https://trapdoor.cloud/compiling-and-installing-dnsmasq-from-source-on-ubuntu-2204/" rel="alternate"></link><published>2023-01-19T00:00:00+02:00</published><updated>2023-01-19T00:00:00+02:00</updated><author><name>Ashley Kleynhans</name></author><id>tag:trapdoor.cloud,2023-01-19:/compiling-and-installing-dnsmasq-from-source-on-ubuntu-2204/</id><summary type="html">&lt;p&gt;This post walks you through the process of compiling and
installing dnsmasq 2.88 from source in Ubuntu 22.04, so that you
can benefit from the &lt;code&gt;filter-AAAA&lt;/code&gt; feature that was introduced
in dnsmasq version 2.87 in order to resolve issues with nginx
servers that only have IPv4 addresses attached to them getting
network unreachable errors when resolving upstream DNS entries
to IPv6 addresses.&lt;/p&gt;</summary><content type="html">&lt;h2 id="background"&gt;Background&lt;/h2&gt;
&lt;p&gt;I was monitoring my nginx logs, when I stumbled across a
peculiar error where nginx was trying to connect to a
Firebase backend with a DNS entry that resolves to an
IPv6 address.&lt;/p&gt;
&lt;pre&gt;
[nginx][] 2023/01/06 07:32:38 [error] 61125#61125: *4683 connect() to
[fe80::cf4d:cab8:b943]:443 failed (101: Network is unreachable) while
connecting to upstream, client: 1.1.1.1, server: , request: 
"GET /file.json?v=3 HTTP/2.0", upstream: 
"https://[fe80::cf4d:cab8:b943]:443/file.json?v=3", host: "example.com", 
referrer: "https://example.com/worker.js"
&lt;/pre&gt;

&lt;p&gt;This was rather perplexing, since none of my nginx servers
have any IPv6 addresses attached to them, but discovered that
the DNS lookup for my Firebase application was returning the
same IPv6 address that I noticed in my nginx log file.&lt;/p&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span style="color: #6e7681"&gt; &lt;/span&gt;host&lt;span style="color: #6e7681"&gt; &lt;/span&gt;example-app.firebaseapp.com
example-app.firebaseapp.com&lt;span style="color: #6e7681"&gt; &lt;/span&gt;has&lt;span style="color: #6e7681"&gt; &lt;/span&gt;address&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;192&lt;/span&gt;.168.1.1
example-app.firebaseapp.com&lt;span style="color: #6e7681"&gt; &lt;/span&gt;has&lt;span style="color: #6e7681"&gt; &lt;/span&gt;IPv6&lt;span style="color: #6e7681"&gt; &lt;/span&gt;address&lt;span style="color: #6e7681"&gt; &lt;/span&gt;fe80::cf4d:cab8:b943
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I then determined that the best way to solve this problem would
be to set up dnsmasq as a DNS cache, and use the &lt;code&gt;filter-AAAA&lt;/code&gt;
option to prevent it from performing IPv6 lookups.&lt;/p&gt;
&lt;p&gt;The problem with this, however, is that the latest version of
the dnsmasq package in the Ubuntu 22.04 repositories is
version &lt;strong&gt;2.86&lt;/strong&gt; and the &lt;code&gt;filter-AAAA&lt;/code&gt; feature was only
introduced in dnsmasq version &lt;strong&gt;2.87&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://launchpad.net/ubuntu/lunar/+source/dnsmasq"&gt;Ubuntu 23.04 (Lunar Lobster)&lt;/a&gt;,
which is currently under active  development at the time of writing,
is the only Ubuntu version that has a version of dnsmasq that
supports the &lt;code&gt;filter-AAAA&lt;/code&gt; feature, so I decided to compile
and install dnsmasq from the &lt;a href="https://launchpad.net/ubuntu/+archive/primary/+sourcefiles/dnsmasq/2.88-1/dnsmasq_2.88.orig.tar.gz"&gt;source used by Ubuntu 23.04&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="download-compile-and-install-dnsmasq-from-source"&gt;Download, Compile and Install dnsmasq from Source&lt;/h2&gt;
&lt;h3 id="download-source-for-dnsmasq-version-288-from-ubuntu-launchpad-site"&gt;Download source for dnsmasq version 2.88 from Ubuntu Launchpad site&lt;/h3&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #e6edf3"&gt;cd&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/tmp
wget&lt;span style="color: #6e7681"&gt; &lt;/span&gt;https://launchpad.net/ubuntu/+archive/primary/+sourcefiles/dnsmasq/2.88-1/dnsmasq_2.88.orig.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="extract-dnsmasq-288-source"&gt;Extract dnsmasq 2.88 source&lt;/h3&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tar&lt;span style="color: #6e7681"&gt; &lt;/span&gt;zxvf&lt;span style="color: #6e7681"&gt; &lt;/span&gt;dnsmasq_2.88.orig.tar.gz
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="install-dependency-packages"&gt;Install dependency packages&lt;/h3&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;apt&lt;span style="color: #6e7681"&gt; &lt;/span&gt;update
sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;apt&lt;span style="color: #6e7681"&gt; &lt;/span&gt;install&lt;span style="color: #6e7681"&gt; &lt;/span&gt;dnsmasq&lt;span style="color: #6e7681"&gt; &lt;/span&gt;gettext
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="compile-dnsmasq"&gt;Compile dnsmasq&lt;/h3&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #e6edf3"&gt;cd&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;dnsmasq-2.88.orig
make&lt;span style="color: #6e7681"&gt; &lt;/span&gt;all-i18n
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="confirm-the-version-of-the-compiled-dnsmasq-binary"&gt;Confirm the version of the compiled dnsmasq binary&lt;/h3&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;src/dnsmasq&lt;span style="color: #6e7681"&gt; &lt;/span&gt;-v
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="stop-the-dnsmasq-service"&gt;Stop the dnsmasq service&lt;/h3&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;systemctl&lt;span style="color: #6e7681"&gt; &lt;/span&gt;stop&lt;span style="color: #6e7681"&gt; &lt;/span&gt;dnsmasq
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="copy-the-newly-compiled-binary-over-the-old-one"&gt;Copy the newly compiled binary over the old one&lt;/h3&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;cp&lt;span style="color: #6e7681"&gt; &lt;/span&gt;src/dnsmasq&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/usr/sbin/dnsmasq
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="remove-file-that-is-no-longer-supported-by-the-new-binary"&gt;Remove file that is no longer supported by the new binary&lt;/h3&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;rm&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/usr/share/dns/root.ds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="edit-the-dnsmasq-config-file-and-configure-it-to-exclude-ipv6-lookups"&gt;Edit the dnsmasq config file and configure it to exclude IPv6 lookups&lt;/h3&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;vim&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/etc/dnsmasq.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Paste the following content:&lt;/p&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #e6edf3"&gt;listen&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;-&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;address&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;127.0&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;0.53&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;port&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;53&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;bind&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;-&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;interfaces&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;user&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;dnsmasq&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;group&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;nogroup&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;pid&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;-&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;file&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=/&lt;/span&gt;&lt;span style="color: #ff7b72"&gt;var&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;/&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;run&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;/&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;dnsmasq&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;/&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;dnsmasq&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;pid&lt;/span&gt;

&lt;span style="color: #8b949e; font-style: italic"&gt;# Name resolution options&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;resolv&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;-&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;file&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=/&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;etc&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;/&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;resolv&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;dnsmasq&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;cache&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;-&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;size&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;500&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;neg&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;-&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;ttl&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;60&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;domain&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;-&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;needed&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;bogus&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;-&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;priv&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;filter&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;-&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;AAAA&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And save the file.&lt;/p&gt;
&lt;h3 id="configure-the-dns-resolver-for-the-dnsmasq-service"&gt;Configure the DNS resolver for the dnsmasq service&lt;/h3&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;bash&lt;span style="color: #6e7681"&gt; &lt;/span&gt;-c&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;&amp;quot;echo &amp;#39;nameserver 1.1.1.1&amp;#39; &amp;gt; /etc/resolv.dnsmasq&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="configure-dns-resolver-for-consul-optional"&gt;Configure DNS resolver for Consul (OPTIONAL)&lt;/h3&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;vim&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/etc/dnsmasq.d/10-consul
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Paste the following content:&lt;/p&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;server=/consul/127.0.0.1#8600
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And save the file.&lt;/p&gt;
&lt;h3 id="disable-systemd-resolved"&gt;Disable systemd resolved&lt;/h3&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;vim&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/etc/systemd/resolved.conf.d/noresolved.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Paste the following content:&lt;/p&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #ff7b72"&gt;[Resolve]&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;DNSStubListener&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;no&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And save the file.&lt;/p&gt;
&lt;h3 id="restart-the-systemd-resolved-and-dnsmasq-services"&gt;Restart the systemd-resolved and dnsmasq services&lt;/h3&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;systemctl&lt;span style="color: #6e7681"&gt; &lt;/span&gt;restart&lt;span style="color: #6e7681"&gt; &lt;/span&gt;systemd-resolved
sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;systemctl&lt;span style="color: #6e7681"&gt; &lt;/span&gt;restart&lt;span style="color: #6e7681"&gt; &lt;/span&gt;dnsmasq.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="edit-etcresolvconf-to-use-dnsmasq-as-the-dns-resolver"&gt;Edit /etc/resolv.conf to use dnsmasq as the DNS resolver&lt;/h3&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;vim&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/etc/resolv.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Paste the following content:&lt;/p&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;nameserver 127.0.0.53
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And save the file.&lt;/p&gt;
&lt;h2 id="verify-that-the-dns-is-now-only-resolving-to-ipv4-addresses-and-not-ipv6-anymore"&gt;Verify that the DNS is now only resolving to IPv4 addresses and not IPv6 anymore&lt;/h2&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span style="color: #6e7681"&gt; &lt;/span&gt;host&lt;span style="color: #6e7681"&gt; &lt;/span&gt;example-app.firebaseapp.com
example-app.firebaseapp.com&lt;span style="color: #6e7681"&gt; &lt;/span&gt;has&lt;span style="color: #6e7681"&gt; &lt;/span&gt;address&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;192&lt;/span&gt;.168.1.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="DevOps"></category><category term="devops"></category><category term="dns"></category><category term="dnsmasq"></category><category term="nginx"></category></entry><entry><title>Upgrading RDS Aurora MySQL DB Engine Version with Minimal Downtime</title><link href="https://trapdoor.cloud/upgrading-rds-aurora-mysql-db-engine-version-with-minimal-downtime/" rel="alternate"></link><published>2023-01-19T00:00:00+02:00</published><updated>2023-03-02T00:00:00+02:00</updated><author><name>Ashley Kleynhans</name></author><id>tag:trapdoor.cloud,2023-01-19:/upgrading-rds-aurora-mysql-db-engine-version-with-minimal-downtime/</id><summary type="html">&lt;p&gt;In this post, I will walk you through the process of upgrading an RDS Aurora MySQL DB engine with minimal downtime.&lt;/p&gt;</summary><content type="html">&lt;p&gt;This procedure explains how to switch over from an existing
Aurora MySQL RDS cluster running a specific engine version to a
new Aurora MySQL RDS cluster running a new engine version
(eg. Upgrading the engine version of Aurora MySQL from 5.6 to
Aurora MySQL 5.7).  It has been tested successfully in upgrading
an Aurora MySQL from 5.6 to Aurora MySQL 5.7 and also upgrading
an Aurora MySQL from 5.7 to Aurora MySQL 8.&lt;/p&gt;
&lt;h2 id="considerations-before-upgrading-from-mysql-57-to-mysql-8"&gt;Considerations before Upgrading from MySQL 5.7 to MySQL 8&lt;/h2&gt;
&lt;p&gt;If you are using ISO date formats when querying &lt;code&gt;DATETIME&lt;/code&gt; fields,
your queries will no longer work in MySQL 8, so you will either need
to update your queries to use the correct &lt;code&gt;DATETIME&lt;/code&gt; format, ie
&lt;code&gt;YYYY-MM-DD HH:MM:SS&lt;/code&gt;, or to use the &lt;code&gt;STR_TO_DATE&lt;/code&gt; function, eg:&lt;/p&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #ff7b72"&gt;SELECT&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #d2a8ff; font-weight: bold"&gt;STR_TO_DATE&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;(&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;&amp;#39;2019-02-20T10:00:00.000Z&amp;#39;&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;,&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;&amp;#39;%Y-%m-%dT%T.%fZ&amp;#39;&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Otherwise you will run into errors that look like this:&lt;/p&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #e6edf3"&gt;mysql&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #ff7b72"&gt;SELECT&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;*&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #ff7b72"&gt;FROM&lt;/span&gt;&lt;span style="color: #6e7681"&gt;  &lt;/span&gt;&lt;span style="color: #e6edf3"&gt;example_table&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #ff7b72"&gt;WHERE&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #e6edf3"&gt;example_field&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;&amp;gt;=&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;&amp;#39;2023-01-02T06:45:31+0000&amp;#39;&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;;&lt;/span&gt;
&lt;span style="color: #ff7b72"&gt;ERROR&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;1525&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #e6edf3"&gt;(HY000)&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;:&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #e6edf3"&gt;Incorrect&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #ff7b72"&gt;DATETIME&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #ff7b72"&gt;value&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;:&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;&amp;#39;2023-01-02T06:45:31+0000&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="prepare-for-upgrade"&gt;Prepare for Upgrade&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;It is important to create a new parameter group for each cluster
that you are upgrading so that you don't accidentally put another
production cluster into read only mode.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add a DNS CNAME to point to the RDS load balancer for the current Aurora cluster
  with a TTL of &lt;strong&gt;60 seconds&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Create a new DB Cluster parameter group with the same settings as the
  default parameter group.&lt;/li&gt;
&lt;li&gt;Change &lt;code&gt;binlog_format&lt;/code&gt; from either &lt;code&gt;OFF&lt;/code&gt; (this was the default in 5.6)
  or &lt;code&gt;ROW&lt;/code&gt; (this was the default in 5.7) to &lt;code&gt;MIXED&lt;/code&gt; in the new
  Parameter group.&lt;/li&gt;
&lt;li&gt;Add a new Reader instance to the cluster.&lt;/li&gt;
&lt;li&gt;Modify the new Reader instance to use the new DB Cluster Parameter Group.&lt;/li&gt;
&lt;li&gt;Apply the changes immediately.&lt;/li&gt;
&lt;li&gt;Reboot the new Reader instance for the Parameter Group changes to
  take effect.&lt;/li&gt;
&lt;li&gt;Failover the new Reader instance so that it becomes the Master/Writer so that
  the cluster does not need to be rebooted for the parameter group changes to take effect.&lt;/li&gt;
&lt;li&gt;Confirm that &lt;code&gt;binlog_format&lt;/code&gt; is enabled on the new Writer instance that you
  failed over to in point (4) above.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;SHOW&lt;span style="color: #6e7681"&gt; &lt;/span&gt;VARIABLES&lt;span style="color: #6e7681"&gt; &lt;/span&gt;LIKE&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;&amp;#39;binlog_format&amp;#39;&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The output should look like this:&lt;/p&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;+---------------+-------+
&lt;span style="color: #e6edf3"&gt;|&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;Variable_name&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #e6edf3"&gt;|&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;Value&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #e6edf3"&gt;|&lt;/span&gt;
+---------------+-------+
&lt;span style="color: #e6edf3"&gt;|&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;binlog_format&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #e6edf3"&gt;|&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;MIXED&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #e6edf3"&gt;|&lt;/span&gt;
+---------------+-------+
&lt;span style="color: #a5d6ff"&gt;1&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;row&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #ff7b72"&gt;in&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #e6edf3"&gt;set&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;(&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;0&lt;/span&gt;.00&lt;span style="color: #6e7681"&gt; &lt;/span&gt;sec&lt;span style="color: #ff7b72; font-weight: bold"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Confirm that the new Writer is able to replicate to a new cluster:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;SHOW&lt;span style="color: #6e7681"&gt; &lt;/span&gt;MASTER&lt;span style="color: #6e7681"&gt; &lt;/span&gt;STATUS&lt;span style="color: #e6edf3"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;If nothing is returned, replication is not enabled and you need to investigate
before proceeding.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Check binlog rotation time, increase to 24 hours minimum:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;CALL&lt;span style="color: #6e7681"&gt; &lt;/span&gt;mysql.rds_show_configuration&lt;span style="color: #ff7b72; font-weight: bold"&gt;()&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;;&lt;/span&gt;
CALL&lt;span style="color: #6e7681"&gt; &lt;/span&gt;mysql.rds_set_configuration&lt;span style="color: #ff7b72; font-weight: bold"&gt;(&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;&amp;#39;binlog retention hours&amp;#39;&lt;/span&gt;,&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;24&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;)&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Create a user to set up replication:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;GRANT&lt;span style="color: #6e7681"&gt; &lt;/span&gt;REPLICATION&lt;span style="color: #6e7681"&gt; &lt;/span&gt;SLAVE,&lt;span style="color: #6e7681"&gt; &lt;/span&gt;REPLICATION&lt;span style="color: #6e7681"&gt; &lt;/span&gt;CLIENT&lt;span style="color: #6e7681"&gt; &lt;/span&gt;ON&lt;span style="color: #6e7681"&gt; &lt;/span&gt;*.*&lt;span style="color: #6e7681"&gt; &lt;/span&gt;to&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;&amp;#39;&amp;lt;USERNAME&amp;gt;&amp;#39;&lt;/span&gt;@&lt;span style="color: #a5d6ff"&gt;&amp;#39;%&amp;#39;&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;IDENTIFIED&lt;span style="color: #6e7681"&gt; &lt;/span&gt;BY&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;&amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39;&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="start-the-upgrade"&gt;Start the Upgrade&lt;/h2&gt;
&lt;h3 id="restore-snapshot-to-the-new-aurora-db-engine-version"&gt;Restore Snapshot to the new Aurora DB Engine Version&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Check binlog positions:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;SHOW&lt;span style="color: #6e7681"&gt; &lt;/span&gt;MASTER&lt;span style="color: #6e7681"&gt; &lt;/span&gt;STATUS&lt;span style="color: #e6edf3"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Take a snapshot of the read replica.&lt;/li&gt;
&lt;li&gt;Restore the snapshot into a new Aurora cluster using the new DB engine version.&lt;/li&gt;
&lt;li&gt;Configure the Writer in the new Aurora cluster to replicate from the Aurora
   cluster running the old engine version:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;CALL&lt;span style="color: #6e7681"&gt; &lt;/span&gt;mysql.rds_set_external_master&lt;span style="color: #ff7b72; font-weight: bold"&gt;(&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;&amp;#39;&amp;lt;MASTER_ENDPOINT&amp;gt;&amp;#39;&lt;/span&gt;,&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;3306&lt;/span&gt;,&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;&amp;#39;&amp;lt;USERNAME&amp;gt;&amp;#39;&lt;/span&gt;,&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;&amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39;&lt;/span&gt;,&lt;span style="color: #a5d6ff"&gt;&amp;#39;&amp;lt;BINLOG_FILE&amp;gt;&amp;#39;&lt;/span&gt;,&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;&amp;#39;&amp;lt;BINLOG_POSITION&amp;gt;&amp;#39;&lt;/span&gt;,&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;0&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;)&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;;&lt;/span&gt;
CALL&lt;span style="color: #6e7681"&gt; &lt;/span&gt;mysql.rds_start_replication&lt;span style="color: #e6edf3"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Check that there is no replication lag, and wait for the slave to catch up
   to master (ensure that &lt;code&gt;Seconds_Behind_Master&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;):&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;SHOW&lt;span style="color: #6e7681"&gt; &lt;/span&gt;SLAVE&lt;span style="color: #6e7681"&gt; &lt;/span&gt;STATUS&lt;span style="color: #79c0ff"&gt;\G&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Create a read replica in the new Aurora cluster running the new DB engine version.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="swing-over-to-new-aurora-cluster"&gt;Swing over to new Aurora Cluster&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Put application into maintenance mode.&lt;/li&gt;
&lt;li&gt;Edit parameter group and change &lt;code&gt;read_only&lt;/code&gt; from &lt;code&gt;{TrueIfReplica}&lt;/code&gt; to 1 to prevent writes
   to the old cluster (no reboot required).&lt;/li&gt;
&lt;li&gt;Update DNS CNAME to point to the new RDS Cluster endpoint.&lt;/li&gt;
&lt;li&gt;Reset the new master/writer in the new Aurora cluster:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;CALL&lt;span style="color: #6e7681"&gt; &lt;/span&gt;mysql.rds_reset_external_master&lt;span style="color: #e6edf3"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;Take application out of maintenance mode.&lt;/li&gt;
&lt;li&gt;Stop the old Aurora Cluster.&lt;/li&gt;
&lt;li&gt;Test.&lt;/li&gt;
&lt;li&gt;Start and delete the old Cluster after a few days (it cannot be deleted
   when it is stopped).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="rolling-back"&gt;Rolling back&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Start the old Aurora Cluster.&lt;/li&gt;
&lt;li&gt;Once the old cluster is up, put application into maintenance mode.&lt;/li&gt;
&lt;li&gt;Update DNS CNAME to point back to the old RDS Cluster endpoint.&lt;/li&gt;
&lt;li&gt;Edit parameter group and change &lt;code&gt;read_only&lt;/code&gt; back from &lt;code&gt;1&lt;/code&gt; to
  &lt;code&gt;{TrueIfReplica}&lt;/code&gt; to enable writes the cluster (no reboot required).&lt;/li&gt;
&lt;li&gt;Take application out of maintenance mode.&lt;/li&gt;
&lt;li&gt;Test.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="references"&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://blogs.halodoc.io/upgrading-to-rds-mysql-8-0-with-minimum-downtime/"&gt;Upgrading to RDS MySQL 8.0 with minimum downtime&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://aws.amazon.com/premiumsupport/knowledge-center/enable-binary-logging-aurora/"&gt;How do I turn on binary logging for my Amazon Aurora MySQL cluster?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="DevOps"></category><category term="devops"></category><category term="aws"></category><category term="rds"></category><category term="aurora"></category><category term="mysql"></category></entry><entry><title>Upgrading Elastic Stack From 7.x to 8.x on Ubuntu 22.04</title><link href="https://trapdoor.cloud/upgrading-elastic-stack-from-7x-to-8x-on-ubuntu-2204/" rel="alternate"></link><published>2023-01-18T00:00:00+02:00</published><updated>2023-01-18T00:00:00+02:00</updated><author><name>Ashley Kleynhans</name></author><id>tag:trapdoor.cloud,2023-01-18:/upgrading-elastic-stack-from-7x-to-8x-on-ubuntu-2204/</id><summary type="html">&lt;p&gt;In this post, I will walk you through the process that I followed to upgrade my Elastic Stack from version 7.x to 8.x on Ubuntu 22.04 LTS.&lt;/p&gt;</summary><content type="html">&lt;h2 id="update-apt-repo-from-version-7x-to-version-8x"&gt;Update apt repo from version 7.x to version 8.x&lt;/h2&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;mv&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/etc/apt/sources.list.d/elastic-7.x.list&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/etc/apt/sources.list.d/elastic-8.x.list
sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;vim&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/etc/apt/sources.list.d/elastic-8.x.list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Paste the following content:&lt;/p&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #ff7b72"&gt;deb&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;[signed-by=/usr/share/keyrings/elastic.gpg]&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #79c0ff"&gt;https://artifacts.elastic.co/packages/8.x/apt&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #79c0ff"&gt;stable&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #79c0ff"&gt;main&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="upgrade-packages"&gt;Upgrade packages&lt;/h2&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;apt&lt;span style="color: #6e7681"&gt; &lt;/span&gt;update
sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;apt&lt;span style="color: #6e7681"&gt; &lt;/span&gt;--only-upgrade&lt;span style="color: #6e7681"&gt; &lt;/span&gt;install&lt;span style="color: #6e7681"&gt; &lt;/span&gt;elasticsearch&lt;span style="color: #6e7681"&gt; &lt;/span&gt;filebeat&lt;span style="color: #6e7681"&gt; &lt;/span&gt;kibana&lt;span style="color: #6e7681"&gt; &lt;/span&gt;logstash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="update-elasticsearch-config"&gt;Update Elasticsearch config&lt;/h2&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;vim&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/etc/elasticsearch/elasticsearch.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Paste the following content, updating the cluster name as appropriate:&lt;/p&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #e6edf3"&gt;cluster&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;name:&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #e6edf3"&gt;your&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;-&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;cluster&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;-&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;name&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;node&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;name:&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #e6edf3"&gt;node&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;-&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;1&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;path&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;data:&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;/&lt;/span&gt;&lt;span style="color: #ff7b72"&gt;var&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;/&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;lib&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;/&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;elasticsearch&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;path&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;logs:&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;/&lt;/span&gt;&lt;span style="color: #ff7b72"&gt;var&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;/&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;log&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;/&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;elasticsearch&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;network&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;host:&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;0.0&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;0.0&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;discovery&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;type:&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #e6edf3"&gt;single&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;-&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;node&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;xpack&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;security&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;enabled:&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #e6edf3"&gt;false&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;xpack&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;security&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;enrollment&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;enabled:&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #e6edf3"&gt;false&lt;/span&gt;

&lt;span style="color: #8b949e; font-style: italic"&gt;# Enable encryption for HTTP API client connections, such as Kibana, Logstash, and Agents&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;xpack&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;security&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;http&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;ssl:&lt;/span&gt;
&lt;span style="color: #6e7681"&gt;  &lt;/span&gt;&lt;span style="color: #e6edf3"&gt;enabled:&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #e6edf3"&gt;false&lt;/span&gt;

&lt;span style="color: #8b949e; font-style: italic"&gt;# Enable encryption and mutual authentication between cluster nodes&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;xpack&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;security&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;transport&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;ssl:&lt;/span&gt;
&lt;span style="color: #6e7681"&gt;  &lt;/span&gt;&lt;span style="color: #e6edf3"&gt;enabled:&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #e6edf3"&gt;false&lt;/span&gt;

&lt;span style="color: #8b949e; font-style: italic"&gt;# Allow HTTP API connections from anywhere&lt;/span&gt;
&lt;span style="color: #8b949e; font-style: italic"&gt;# Connections are encrypted and require user authentication&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;http&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #e6edf3"&gt;host:&lt;/span&gt;&lt;span style="color: #6e7681"&gt; &lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;0.0&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;.&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;0.0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="restart-elasticsearch"&gt;Restart Elasticsearch&lt;/h2&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;systemctl&lt;span style="color: #6e7681"&gt; &lt;/span&gt;restart&lt;span style="color: #6e7681"&gt; &lt;/span&gt;elasticsearch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="remove-incompatible-logging-from-kibana-systemd-service"&gt;Remove incompatible logging from Kibana systemd service&lt;/h2&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;vim&lt;span style="color: #6e7681"&gt; &lt;/span&gt;/etc/systemd/system/kibana.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Paste the following content:&lt;/p&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span style="color: #ff7b72"&gt;[Unit]&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;Description&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;Kibana&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;Documentation&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;https://www.elastic.co&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;Wants&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;network-online.target&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;After&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;network-online.target&lt;/span&gt;

&lt;span style="color: #ff7b72"&gt;[Service]&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;Type&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;simple&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;User&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;kibana&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;Group&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;kibana&lt;/span&gt;

&lt;span style="color: #e6edf3"&gt;Environment&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;KBN_HOME=/usr/share/kibana&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;Environment&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;KBN_PATH_CONF=/etc/kibana&lt;/span&gt;

&lt;span style="color: #e6edf3"&gt;EnvironmentFile&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;-/etc/default/kibana&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;EnvironmentFile&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;-/etc/sysconfig/kibana&lt;/span&gt;

&lt;span style="color: #e6edf3"&gt;ExecStart&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;/usr/share/kibana/bin/kibana --pid.file=&amp;quot;/run/kibana/kibana.pid&amp;quot;&lt;/span&gt;

&lt;span style="color: #e6edf3"&gt;Restart&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;on-failure&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;RestartSec&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;3&lt;/span&gt;

&lt;span style="color: #e6edf3"&gt;StartLimitBurst&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;3&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;StartLimitInterval&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;60&lt;/span&gt;

&lt;span style="color: #e6edf3"&gt;WorkingDirectory&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;/usr/share/kibana&lt;/span&gt;

&lt;span style="color: #e6edf3"&gt;StandardOutput&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;journal&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;StandardError&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;inherit&lt;/span&gt;

&lt;span style="color: #ff7b72"&gt;[Install]&lt;/span&gt;
&lt;span style="color: #e6edf3"&gt;WantedBy&lt;/span&gt;&lt;span style="color: #ff7b72; font-weight: bold"&gt;=&lt;/span&gt;&lt;span style="color: #a5d6ff"&gt;multi-user.target&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="restart-kibana"&gt;Restart Kibana&lt;/h2&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;systemctl&lt;span style="color: #6e7681"&gt; &lt;/span&gt;restart&lt;span style="color: #6e7681"&gt; &lt;/span&gt;kibana
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="verify-all-services-are-running"&gt;Verify all services are running&lt;/h2&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;systemctl&lt;span style="color: #6e7681"&gt; &lt;/span&gt;status&lt;span style="color: #6e7681"&gt; &lt;/span&gt;elasticsearch
sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;systemctl&lt;span style="color: #6e7681"&gt; &lt;/span&gt;status&lt;span style="color: #6e7681"&gt; &lt;/span&gt;logstash
sudo&lt;span style="color: #6e7681"&gt; &lt;/span&gt;systemctl&lt;span style="color: #6e7681"&gt; &lt;/span&gt;status&lt;span style="color: #6e7681"&gt; &lt;/span&gt;kibana
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="verify-version-of-elasticsearch"&gt;Verify version of Elasticsearch&lt;/h2&gt;
&lt;div class="highlight" style="background: #0d1117"&gt;&lt;pre style="line-height: 125%;"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;curl&lt;span style="color: #6e7681"&gt; &lt;/span&gt;http://127.0.0.1:9200
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="DevOps"></category><category term="elastic"></category><category term="ubuntu"></category><category term="devops"></category></entry></feed>